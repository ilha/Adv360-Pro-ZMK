#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&lt { quick-tap-ms = <200>; };

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        shifted: shifted {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <>;
            label = "SHIFTED";
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 46 47 48 49 50 51 60 61 62 63 64 65 35 36 52 67 66>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 37 38 39 40 41 42 43 44 45 53 54 55 56 57 58 59 68 69 70 71 72 73 74 75>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1           &kp N2           &kp N3               &kp N4             &kp N5  &tog 1                                                                                                             &mo 3             &kp N6  &kp N7              &kp N8                &kp N9            &kp N0               &kp MINUS
&kp TAB    &kp Q            &kp W            &kp E                &kp R              &kp T   &kp C_VOLUME_UP                                                                                                    &kp C_PLAY_PAUSE  &kp Y   &kp U               &kp I                 &kp O             &kp P                &kp BSLH
&kp ESC    &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LEFT_CONTROL D  &hml LEFT_SHIFT F  &kp G   &kp C_VOLUME_DOWN  &kp ESC       &mt LEFT_CONTROL TAB          &kp RIGHT_ALT                    &mt RIGHT_GUI TAB  &kp C_MUTE        &kp H   &hmr RIGHT_SHIFT J  &hmr RIGHT_CONTROL K  &hmr RIGHT_ALT L  &hmr RIGHT_GUI SEMI  &kp SQT
&kp LSHFT  &kp Z            &kp X            &kp C                &kp V              &kp B                                    &mt LEFT_SHIFT HOME           &mt RIGHT_SHIFT PG_UP                                                 &kp N   &kp M               &kp COMMA             &kp DOT           &kp FSLH             &kp RSHFT
&mo 2      &kp GRAVE        &kp CAPS         &kp LEFT             &kp RIGHT                  &lt 2 BACKSPACE    &lt 4 DELETE  &mt LS(LC(LEFT_ALT)) END      &mt RS(RC(RG(RIGHT_ALT))) PG_DN  &lt 4 ENTER        &lt 2 SPACE               &kp UP              &kp DOWN              &kp LBKT          &kp RBKT             &mo 2
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3           &kp F4     &kp F5            &kp F6        &tog 1                                             &mo 3   &kp F7  &kp F8      &kp F9                &kp F10                &kp F11            &kp F12
&trans  &trans  &kp EXCLAMATION  &kp CARET  &kp EQUAL         &kp ASTERISK  &none                                              &none   &trans  &kp DOLLAR  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp DOUBLE_QUOTES  &trans
&trans  &trans  &kp LESS_THAN    &kp MINUS  &kp GREATER_THAN  &kp PLUS      &none          &trans  &trans      &trans  &trans  &none   &trans  &kp HASH    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SINGLE_QUOTE   &trans
&trans  &trans  &kp GRAVE        &kp UNDER  &trans            &trans                               &trans      &trans                  &trans  &kp TILDE   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp GRAVE          &trans
&trans  &trans  &trans           &trans     &trans                          &kp LG(SLASH)  &trans  &trans      &trans  &trans  &trans          &trans      &trans                &trans                 &trans             &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        numbers {
            bindings = <
&trans     &trans        &trans        &trans        &trans        &trans  &trans                                      &trans  &trans        &trans  &trans  &trans  &trans  &trans
&trans     &trans        &trans        &trans        &trans        &trans  &trans                                      &trans  &trans        &trans  &trans  &trans  &trans  &trans
&kp EQUAL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5  &trans  &trans  &trans      &trans  &trans  &trans  &kp NUMBER_6  &kp N7  &kp N8  &kp N9  &kp N0  &kp MINUS
&trans     &trans        &trans        &trans        &trans        &trans                  &trans      &trans                  &trans        &trans  &trans  &trans  &trans  &trans
&trans     &trans        &trans        &trans        &trans                &trans  &trans  &trans      &trans  &trans  &trans                &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
